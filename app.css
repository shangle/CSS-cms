/* CSS crunched with Crunch - http://crunchapp.net/ */
.alignment{max-width:960px;margin:0 auto;display:block;text-align:center;}
*{font-family:sans-serif;font-weight:0;}
html{max-width:960px;margin:0 auto;display:block;text-align:center;background:#333333;}
body{max-width:960px;margin:0 auto;display:block;text-align:center;background:#f9f8f5;padding:1em;margin:1em 5em;text-align:left;border:5px solid #bb9f8a;}
html:before{max-width:960px;margin:0 auto;display:block;text-align:center;font-size:68.06888381267834px;color:#eeeeee;font-weight:900;}
body:before{max-width:960px;margin:0 auto;display:block;text-align:center;font-size:42.068883740000004px;font-weight:700;margin-bottom:1em;color:#3F618C;}
body:after{font-size:26px;white-space:pre-wrap;line-spacing:1.61803399em;}
html:after{max-width:960px;margin:0 auto;display:block;font-size:16.068883695082327px;color:#eeeeee;text-align:center;padding:1em 0;}
@media all and (max-width:600px){body{padding:.5em;margin:.5em .5em;text-align:left;border:3px solid #bb9f8a;}}html:before{content:"CSS cms";}
body:before{content:"a simple cms created in CSS.";}
body:after{content:"\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A Overview \000A\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A First, there was HTML. Then, in the late 1990s there was an explosion of websites that leveraged Macromedia Flash technologies to implement amazing websites. A decade later, this has been replaced by javascript. Now, as web browsers continue to gain power, I present a CMS framework built using CSS. \000A\000A Really, look at the source code. Simple, right? \000A\000A \25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A Goal \000A\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A The main goal of of this CMS framework is to play on the notion that a pure CSS solution is the best solution. Bloated javascript is bad, but javascript, when used properly, is not. \000A\000A This CMS framework pokes fun at it by using barely any HTMl, and placing all the content within the CSS. \000A\000A \25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A Features \000A\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A There are quite a few features in CSS cms and the best way to learn about them is to try it out for yourself. However, the following list should provide you with a good perspective on what are a few things you gain: \000A \00A0\00A0\00A0 \25CF \00A0 simple to use syntax \000A \00A0\00A0\00A0 \25CF \00A0 content hidden from HTML source \000A \00A0\00A0\00A0 \25CF \00A0 requires no javascript \000A \00A0\00A0\00A0 \25CF \00A0 leverages CSS powered transitions \000A \00A0\00A0\00A0 \25CF \00A0 shiny and impressive \000A \00A0\00A0\00A0 \25CF \00A0 easy to integrate other CSS frameworks \000A\000A \25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A What's Next? \000A\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\25AC\000A The are several glaring problems with this framework. The biggest one is the lack of links, or way to navigate. As of now, this only works for single page websites. However, most websites should only be one page, so I predict that 47% of all sites will be able to readily use this framework. \000A\000A \000A\000A ";}
html:after{content:"created by @shangle. \00A9 2013";}
